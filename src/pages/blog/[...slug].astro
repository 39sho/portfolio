---
import { getCollection } from "astro:content";
import Layout from "../../layouts/default.astro";
import Header from "../../components/Header.astro";
import BlogCard from "../../components/BlogCard.astro";
import { getBacklinks } from "../../lib/backlink";
import { getEntry } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Stack from "../../layouts/Stack.astro";
import Main from "../../layouts/Main.astro";
import Toc from "../../components/Toc.astro";

type Entry = CollectionEntry<"blog">;

export async function getStaticPaths() {
    const entries = await getCollection("blog");

    const backlinks = await getBacklinks([entries]);

    return entries.map((entry) => ({
        params: { slug: entry.slug },
        props: {
            entry,
            backlink:
                backlinks.get(`/${entry.collection}/${entry.slug}/`) ?? [],
        },
    }));
}

const { entry, backlink } = Astro.props;
const { Content, headings } = await entry.render();

const backlinkEntries = (
    await Promise.all(
        backlink.map((link) =>
            getEntry(link.split("/")[1] as "blog", link.split("/")[2]),
        ),
    )
).filter((entry): entry is Entry => entry != null);
---

<Layout
    title={`${entry.data.title} | 39sho.dev`}
    description={entry.data.summary}
>
    <div class="sticky top-0 z-50">
        <Header />
    </div>
    <Main>
        <BlogCard
            link={`/blog/${entry.slug}`}
            title={entry.data.title}
            summary={entry.data.summary}
        />
        <div class="my-2 right-0">
            <Toc headings={headings} />
        </div>
        <div class="prose py-8 w-full mx-w-full">
            <Content />
        </div>
        <div>
            <span>Backlinks</span>
            <Stack>
                {
                    backlinkEntries
                        .sort(
                            (entryA, entryB) =>
                                entryB.data.date.getTime() -
                                entryA.data.date.getTime(),
                        )
                        .map((entry) => (
                            <BlogCard
                                link={`/blog/${entry.slug}`}
                                title={entry.data.title}
                            />
                        ))
                }
            </Stack>
        </div>
    </Main>
</Layout>
